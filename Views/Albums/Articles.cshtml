@model IEnumerable<fanaticServe.Dto.ArticleAlbum>
@using  fanaticServe.Dto

@{
    ViewData["Title"] = "discography - 収録曲";
}
<h1>@ViewData["Title"] </h1>

<a asp-action="Articles" asp-route-sortOrder="@ViewData["ArticleDateSort"]">発売日で並び替え</a> |
<a asp-action="Articles" asp-route-sortOrder="@ViewData["ArticleTitleSort"]">タイトルで並び替え</a>

@foreach(ArticleAlbum abs in Model)
{
    <article class="abs-album article-outer">
        <div class="card article-inner">
            <div class="card-header">
                <div>
                    <h4><a asp-controller="Albums" asp-action="AlbumGroup" asp-route-id="@abs.Abstract_album_id">@abs.Title</a></h4>
                </div>
                <div>    
                    <span>発売日</span>:<span>@Html.DisplayFor(model => abs.Release_On)</span>
                </div> 
            </div>
            @if( abs.Albums != null)
            {
               <div class="card-body variations">
                    @* アルバム情報 *@
                    @foreach(var album in abs.Albums)
                    {
                        <div class="article-detail">
                            <a asp-action="Detail" asp-route-id="@album.Album_id">@Html.DisplayFor(modelItem => album.Title)</a>
                        </div>
                        @await Html.PartialAsync("_DetailAlbumView",album);
                    }
                </div>
            }
        </div>
    </article>
}
